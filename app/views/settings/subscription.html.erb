<%= render 'settings/layout', active: 'subscription' do %>
  <div class="subscription-page">
    <!-- Subscription Plan Section -->
    <div class="subscription-section">
      <div class="section-header">
        <div class="header-content">
          <h2 class="section-title">Subscription Plan</h2>
          <p class="section-subtitle">Clear and fair pricing for everyone. 10,000+ peoples are using it.</p>
        </div>
        <div class="header-actions">
          <%= link_to "Billing History", billing_settings_path, class: "billing-history-link" %>
        </div>
      </div>

      <!-- Plan Cards -->
      <div class="plan-cards">
        <% @plans.each do |plan| %>
          <%= link_to plan_details_settings_path(plan.chargebee_item_price_id), class: "plan-card-link" do %>
            <div class="plan-card <%= 'current-plan' if @current_subscription&.chargebee_plan&.chargebee_item_price_id == plan.chargebee_item_price_id %>">
              <% if plan.name.downcase.include?('plus') || plan.name.downcase.include?('pro') %>
                <div class="plan-badge">Most Popular</div>
              <% end %>
              
              <div class="plan-header">
                <h3 class="plan-name"><%= plan.name %></h3>
                <p class="plan-description">Clear and fair pricing for everyone. 10,000+ peoples are using it.</p>
              </div>

              <div class="plan-pricing">
                <div class="price">
                  <span class="currency">$</span>
                  <span class="amount"><%= plan.price.to_i == 0 ? '0' : plan.price.to_i %></span>
                </div>
                <div class="billing-cycle">
                  <%= plan.price.to_i == 0 ? 'Free' : "#{plan.period_unit&.capitalize}ly" %>
                </div>
              </div>

              <div class="plan-features">
                <% if plan.feature_descriptions.present? %>
                  <% plan.feature_descriptions.each do |description| %>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text"><%= description %></span>
                    </div>
                  <% end %>
                <% elsif plan.features.present? %>
                  <% plan.features.each do |feature| %>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text"><%= feature %></span>
                    </div>
                  <% end %>
                <% else %>
                  <!-- Fallback to default features based on plan -->
                  <% if plan.name.downcase.include?('basic') || plan.name.downcase.include?('free') %>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Basic Claims Creation</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Community Access</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Limited AI Evidence (5/month)</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Basic Support</span>
                    </div>
                  <% elsif plan.name.downcase.include?('plus') || plan.name.downcase.include?('pro') %>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Everything in Basic</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Unlimited Claims</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Enhanced AI Evidence (25/month)</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Priority Support</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Advanced Analytics</span>
                    </div>
                  <% elsif plan.name.downcase.include?('premium') %>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Everything in Plus</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Unlimited AI Evidence</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Premium Support</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">24/7 Response Time</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Custom Integrations</span>
                    </div>
                    <div class="feature-item">
                      <i class="fas fa-check feature-icon"></i>
                      <span class="feature-text">Dedicated Account Manager</span>
                    </div>
                  <% end %>
                <% end %>
              </div>

              <div class="plan-action">
                <% if @current_subscription&.chargebee_plan&.chargebee_item_price_id == plan.chargebee_item_price_id %>
                  <button class="btn btn-current-plan" disabled>Current Plan</button>
                <% else %>
                  <% if @current_subscription.present? %>
                    <% if plan.price > @current_subscription.chargebee_plan&.price %>
                      <%= button_to "Upgrade to #{plan.name}", chargebee_subscriptions_path(plan_id: plan.chargebee_item_price_id), 
                          method: :post, 
                          class: "btn btn-upgrade",
                          data: { 
                            disable_with: "Upgrading...",
                            action: "plan-action"
                          } %>
                    <% else %>
                      <%= button_to "Downgrade to #{plan.name}", chargebee_subscriptions_path(plan_id: plan.chargebee_item_price_id), 
                          method: :post, 
                          class: "btn btn-downgrade",
                          data: { 
                            disable_with: "Downgrading...",
                            action: "plan-action"
                          } %>
                    <% end %>
                  <% else %>
                    <button class="btn btn-select-plan" 
                            data-plan-id="<%= plan.chargebee_item_price_id %>"
                            data-plan-name="<%= plan.name %>"
                            data-plan-price="<%= plan.price %>"
                            data-plan-period="<%= plan.period_unit %>"
                            onclick="openSubscriptionModal(this); event.stopPropagation(); event.preventDefault();">
                      Select Plan
                    </button>
                  <% end %>
                <% end %>
              </div>
            </div>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
<% end %>

<!-- Subscription Modal -->
<div id="subscriptionModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="subscriptionModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="subscriptionModalLabel">Complete Your Subscription</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="checkout-page">
          <div class="plan-summary mb-4">
            <div class="plan-summary-card">
              <div class="plan-info">
                <h4 id="modalPlanName"></h4>
                <p class="plan-description">Clear and fair pricing for everyone. 10,000+ peoples are using it.</p>
              </div>
              <div class="plan-price">
                <span class="price-amount" id="modalPlanPrice"></span>
                <span class="price-period" id="modalPlanPeriod"></span>
              </div>
            </div>
          </div>

          <form id="checkout-form" method="post" action="<%= chargebee_subscriptions_path %>">
            <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
            <input type="hidden" name="plan_id" id="modalPlanId">
            <input type="hidden" name="payment_source_id" id="payment_source_id">

            <div class="row g-3 mb-4">
              <div class="col-md-6">
                <label class="form-label">Full Name</label>
                <input type="text" name="name" value="<%= current_user.full_name %>" class="form-control" required>
              </div>
              <div class="col-md-6">
                <label class="form-label">Email</label>
                <input type="email" name="email" value="<%= current_user.email %>" class="form-control" required readonly>
              </div>
            </div>

            <hr class="my-4">

            <div class="payment-section">
              <h5 class="mb-3">Payment Information</h5>
              
              <div class="cb-form">
                <div class="mb-3">
                  <label class="form-label">Card Details</label>
                  <div id="cb-card" class="form-control cb-field"></div>
                </div>
              </div>
            </div>

            <div class="checkout-actions mt-4">
              <button class="btn btn-primary btn-lg w-100" id="pay_btn" type="submit">
                <span class="btn-text" id="payButtonText">Subscribe Now</span>
                <span class="btn-loading" style="display: none;">
                  <i class="fas fa-spinner fa-spin"></i> Processing...
                </span>
              </button>
              
              <div class="security-notice mt-3">
                <small class="text-muted">
                  <i class="fas fa-lock"></i> Your payment information is secured by Chargebee and never stored on our servers.
                </small>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Chargebee.js v2 -->
<script src="https://js.chargebee.com/v2/chargebee.js"></script>
<script>
  // Initialize Chargebee with site configuration
  window.CHARGEBEE_SITE = '<%= ENV['CHARGEBEE_SITE'] %>';
  window.CHARGEBEE_CURRENCY = 'USD';
  window.CHARGEBEE_GATEWAY_ACCOUNT_ID = '<%= ENV.fetch("CHARGEBEE_GATEWAY_ACCOUNT_ID", "") %>';
  window.CHARGEBEE_PUBLISHABLE_KEY = '<%= ENV.fetch("CHARGEBEE_PUBLISHABLE_KEY", "") %>';

  let cbInstance = null;
  let card = null;

  function openSubscriptionModal(button) {
    const planId = button.getAttribute('data-plan-id');
    const planName = button.getAttribute('data-plan-name');
    const planPrice = button.getAttribute('data-plan-price');
    const planPeriod = button.getAttribute('data-plan-period');

    // Set modal content
    document.getElementById('modalPlanId').value = planId;
    document.getElementById('modalPlanName').textContent = planName;
    document.getElementById('modalPlanPrice').textContent = `$${planPrice}/${planPeriod}`;
    document.getElementById('payButtonText').textContent = `Subscribe Now - $${planPrice}/${planPeriod}`;

    // Show modal
    const modal = new bootstrap.Modal(document.getElementById('subscriptionModal'));
    modal.show();

    // Initialize Chargebee after modal is shown
    setTimeout(() => {
      initializeChargebee();
    }, 300);
  }

  // Initialize Chargebee
  function initializeChargebee() {
    console.log('Chargebee site:', window.CHARGEBEE_SITE);
    
    if (!window.CHARGEBEE_SITE || window.CHARGEBEE_SITE === '') {
      console.error('Chargebee site not configured');
      alert('Payment configuration error. Please contact support.');
      return;
    }
    
    if (typeof Chargebee === 'undefined') {
      console.error('Chargebee library not loaded, retrying in 100ms...');
      setTimeout(initializeChargebee, 100);
      return;
    }
    
    try {
      // Initialize Chargebee v2
      cbInstance = Chargebee.init({
        site: window.CHARGEBEE_SITE,
        publishableKey: window.CHARGEBEE_PUBLISHABLE_KEY
      });
      console.log('Chargebee v2 instance initialized:', cbInstance);
      
      // Load the components module before creating hosted fields
      console.log('Loading components module...');
      cbInstance.load("components").then(() => {
        console.log('Components module loaded successfully');
        initializeHostedFields(cbInstance);
      }).catch((error) => {
        console.error('Error loading components module:', error);
        alert('Unable to load payment components. Please refresh the page or contact support.');
      });
    } catch (error) {
      console.error('Error initializing Chargebee:', error);
      alert('Unable to initialize payment system. Please refresh the page or contact support.');
    }
  }
  
  function initializeHostedFields(cbInstance) {
    try {
      console.log('Creating hosted fields...');
      
      card = cbInstance.createComponent("card");
      card.mount("#cb-card");
      console.log('Card field mounted successfully ✅');
      
      // Try setting currency on the card component
      if (card.setCurrency) {
        console.log('Setting currency on card component to USD');
        card.setCurrency("USD");
      }
      
      initializeFormSubmission(cbInstance, card);
    } catch (error) {
      console.error('Error creating hosted fields:', error);
      alert('Unable to load payment form. Please refresh the page or contact support.');
      return;
    }
  }
  
  function initializeFormSubmission(cbInstance, card) {
    const form = document.getElementById("checkout-form");
    const payBtn = document.getElementById("pay_btn");
    const btnText = payBtn.querySelector(".btn-text");
    const btnLoading = payBtn.querySelector(".btn-loading");

    form.addEventListener("submit", async function(e) {
      e.preventDefault();
      
      payBtn.disabled = true;
      btnText.style.display = "none";
      btnLoading.style.display = "inline-block";

      try {
        console.log('Tokenizing card details...');
        
        if (!window.CHARGEBEE_CURRENCY || window.CHARGEBEE_CURRENCY === '') {
          console.error('Currency is not defined!');
          alert('Payment configuration error. Please contact support.');
          payBtn.disabled = false;
          btnText.style.display = "inline-block";
          btnLoading.style.display = "none";
          return;
        }
        
        if (!window.CHARGEBEE_GATEWAY_ACCOUNT_ID || window.CHARGEBEE_GATEWAY_ACCOUNT_ID === '') {
          console.error('Gateway Account ID is not defined!');
          alert('Payment configuration error. Please contact support.');
          payBtn.disabled = false;
          btnText.style.display = "inline-block";
          btnLoading.style.display = "none";
          return;
        }
        
        console.log('Attempting to tokenize card...');
        const result = await cbInstance.tokenize(card, {
          currency_code: window.CHARGEBEE_CURRENCY,
          gateway_account_id: window.CHARGEBEE_GATEWAY_ACCOUNT_ID
        });
        console.log('Tokenization result:', result);
        console.log('Token:', result.token, 'Vault Token:', result.vaultToken);
        
        // For Stripe gateway, use vaultToken (Stripe token) instead of token (Chargebee token)
        const tokenToUse = result.vaultToken; // Use Stripe token for Stripe gateway
        if (!tokenToUse || !tokenToUse.startsWith('tok_')) {
          console.error('Invalid Stripe token generated:', tokenToUse);
          alert('Failed to generate a valid payment token. Please check your card details and try again.');
          payBtn.disabled = false;
          btnText.style.display = "inline-block";
          btnLoading.style.display = "none";
          return;
        }

        document.getElementById("payment_source_id").value = tokenToUse;
        console.log('Submitting form with Stripe token:', tokenToUse);
        form.submit();
      } catch (err) {
        console.error('Card tokenization failed:', err);
        console.error('Error details:', {
          message: err.message,
          code: err.code,
          type: err.type
        });
        alert(err && err.message ? err.message : "Payment failed. Please check your card details and try again.");
        payBtn.disabled = false;
        btnText.style.display = "inline-block";
        btnLoading.style.display = "none";
      }
    });
  }

  // Add click handler to plan cards for navigation
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.plan-card').forEach(function(card) {
      card.addEventListener('click', function(event) {
        // Don't navigate if clicking on buttons or forms
        if (event.target.closest('.btn') || 
            event.target.closest('form') ||
            event.target.tagName === 'BUTTON' ||
            event.target.tagName === 'INPUT') {
          event.stopPropagation();
          return;
        }
        
        // Navigate to plan details page
        const planId = card.getAttribute('data-plan-id');
        if (planId) {
          window.location.href = `/settings/plan/${planId}`;
        }
      });
    });
  });

  document.addEventListener('DOMContentLoaded', function() {
    console.log('Plan card JavaScript loaded');
  });
</script> 